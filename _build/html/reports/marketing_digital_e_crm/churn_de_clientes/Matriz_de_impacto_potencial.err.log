Traceback (most recent call last):
  File "C:\Users\wolke\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\wolke\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\wolke\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\wolke\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\wolke\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\wolke\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\wolke\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Definir os cortes de probabilidade
thresholds = np.arange(0, 1.01, 0.01)

# Fazer previsÃµes de probabilidade com o modelo carregado
y_prob = loaded_model.predict_proba(X_test)[:, 1]


# Criar as matrizes de confusÃ£o e as matrizes de impacto para cada corte
impact_data = []

for threshold in thresholds:
    # Aplicar o corte de probabilidade para gerar previsÃµes binÃ¡rias
    y_pred = (y_prob >= threshold).astype(int)
    # Calcular a matriz de confusÃ£o
    conf_matrix = confusion_matrix(y_test, y_pred, normalize='all')
    # normalize='all') retorna a % de cada valor sobre o total, permitindo escalar para o total de clientes da base

    # Calcular o impacto financeiro para cada valor da matriz de confusÃ£o
    impacto_potencial = conf_matrix * matriz_custosA * n_cliente
                     
    
    impact_data.append({
        'threshold': threshold,
        'TN': impacto_potencial[0, 0],
        'FP': impacto_potencial[0, 1],
        'FN': impacto_potencial[1, 0],
        'TP': impacto_potencial[1, 1],
        'impacto_potencial': impacto_potencial.sum(),
    })

# Criar DataFrame
df_impact = pd.DataFrame(impact_data).set_index('threshold')

# Mostrar o DataFrame
df_impact
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
Cell [1;32mIn[15], line 5[0m
[0;32m      2[0m thresholds [38;5;241m=[39m np[38;5;241m.[39marange([38;5;241m0[39m, [38;5;241m1.01[39m, [38;5;241m0.01[39m)
[0;32m      4[0m [38;5;66;03m# Fazer previsÃµes de probabilidade com o modelo carregado[39;00m
[1;32m----> 5[0m y_prob [38;5;241m=[39m [43mloaded_model[49m[38;5;241;43m.[39;49m[43mpredict_proba[49m[43m([49m[43mX_test[49m[43m)[49m[:, [38;5;241m1[39m]
[0;32m      8[0m [38;5;66;03m# Criar as matrizes de confusÃ£o e as matrizes de impacto para cada corte[39;00m
[0;32m      9[0m impact_data [38;5;241m=[39m []

File [1;32m~\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_forest.py:946[0m, in [0;36mForestClassifier.predict_proba[1;34m(self, X)[0m
[0;32m    944[0m check_is_fitted([38;5;28mself[39m)
[0;32m    945[0m [38;5;66;03m# Check data[39;00m
[1;32m--> 946[0m X [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_X_predict[49m[43m([49m[43mX[49m[43m)[49m
[0;32m    948[0m [38;5;66;03m# Assign chunk of trees to jobs[39;00m
[0;32m    949[0m n_jobs, _, _ [38;5;241m=[39m _partition_estimators([38;5;28mself[39m[38;5;241m.[39mn_estimators, [38;5;28mself[39m[38;5;241m.[39mn_jobs)

File [1;32m~\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_forest.py:641[0m, in [0;36mBaseForest._validate_X_predict[1;34m(self, X)[0m
[0;32m    638[0m [38;5;28;01melse[39;00m:
[0;32m    639[0m     force_all_finite [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[1;32m--> 641[0m X [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_data[49m[43m([49m
[0;32m    642[0m [43m    [49m[43mX[49m[43m,[49m
[0;32m    643[0m [43m    [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mDTYPE[49m[43m,[49m
[0;32m    644[0m [43m    [49m[43maccept_sparse[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mcsr[39;49m[38;5;124;43m"[39;49m[43m,[49m
[0;32m    645[0m [43m    [49m[43mreset[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    646[0m [43m    [49m[43mforce_all_finite[49m[38;5;241;43m=[39;49m[43mforce_all_finite[49m[43m,[49m
[0;32m    647[0m [43m[49m[43m)[49m
[0;32m    648[0m [38;5;28;01mif[39;00m issparse(X) [38;5;129;01mand[39;00m (X[38;5;241m.[39mindices[38;5;241m.[39mdtype [38;5;241m!=[39m np[38;5;241m.[39mintc [38;5;129;01mor[39;00m X[38;5;241m.[39mindptr[38;5;241m.[39mdtype [38;5;241m!=[39m np[38;5;241m.[39mintc):
[0;32m    649[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mNo support for np.int64 index based sparse matrices[39m[38;5;124m"[39m)

File [1;32m~\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:608[0m, in [0;36mBaseEstimator._validate_data[1;34m(self, X, y, reset, validate_separately, cast_to_ndarray, **check_params)[0m
[0;32m    537[0m [38;5;28;01mdef[39;00m [38;5;21m_validate_data[39m(
[0;32m    538[0m     [38;5;28mself[39m,
[0;32m    539[0m     X[38;5;241m=[39m[38;5;124m"[39m[38;5;124mno_validation[39m[38;5;124m"[39m,
[1;32m   (...)[0m
[0;32m    544[0m     [38;5;241m*[39m[38;5;241m*[39mcheck_params,
[0;32m    545[0m ):
[0;32m    546[0m [38;5;250m    [39m[38;5;124;03m"""Validate input data and set or check the `n_features_in_` attribute.[39;00m
[0;32m    547[0m 
[0;32m    548[0m [38;5;124;03m    Parameters[39;00m
[1;32m   (...)[0m
[0;32m    606[0m [38;5;124;03m        validated.[39;00m
[0;32m    607[0m [38;5;124;03m    """[39;00m
[1;32m--> 608[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_check_feature_names[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43mreset[49m[38;5;241;43m=[39;49m[43mreset[49m[43m)[49m
[0;32m    610[0m     [38;5;28;01mif[39;00m y [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m [38;5;28mself[39m[38;5;241m.[39m_get_tags()[[38;5;124m"[39m[38;5;124mrequires_y[39m[38;5;124m"[39m]:
[0;32m    611[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[0;32m    612[0m             [38;5;124mf[39m[38;5;124m"[39m[38;5;124mThis [39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m estimator [39m[38;5;124m"[39m
[0;32m    613[0m             [38;5;124m"[39m[38;5;124mrequires y to be passed, but the target y is None.[39m[38;5;124m"[39m
[0;32m    614[0m         )

File [1;32m~\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:535[0m, in [0;36mBaseEstimator._check_feature_names[1;34m(self, X, reset)[0m
[0;32m    530[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m missing_names [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m unexpected_names:
[0;32m    531[0m     message [38;5;241m+[39m[38;5;241m=[39m (
[0;32m    532[0m         [38;5;124m"[39m[38;5;124mFeature names must be in the same order as they were in fit.[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[0;32m    533[0m     )
[1;32m--> 535[0m [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(message)

[1;31mValueError[0m: The feature names should match those that were passed during fit.
Feature names unseen at fit time:
- Limite_Credito_Mercado


